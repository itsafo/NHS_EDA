setwd("C:/Users/user/OneDrive - Robert Gordon University/Career/Machine Learning/Tutorial Class Documentation/Habib")
dataframe <- read.csv('Habib.csv')
View(dataframe)
dp <- dataframe[DepartmentType]
dp <- dataframe$DepartmentType
view(dp)
View(dp)
library(stringr)
library(dplyr)
dp <- dp %>%
str_replace_all(" ", "_")
View(dp)
dp <- dp %>%
str_replace_all(" ", "")
View(dp)
dp <- dp %>%
str_replace_all("_", "")
View(dp)
View(dataframe)
epartmentType[Emergency Department]<-Emergencies
epartmentType[EmergencyDepartment]<-Emergencies
epartmentType[Emergencies]<-EmergencyDepartment
dt <- rename(dataframe, c(DepartmentType=”DeptType”))
?rename
??rename
dpt <- paste("DeptType", sep="")
names(m[3])
names(dataframe[3])
# Replacing the name of column 3
names(dataframe[3]) <- dpt
View(dataframe)
head(dataframe)
dpt <- paste("DeptType")
# Replacing the name of column 3
names(dataframe[3]) <- dpt
head(dataframe)
dpt <- paste("DeptType", 3)
# Replacing the name of column 3
names(dataframe[3]) <- dpt
head(dataframe)
dpt <- paste("DeptType", 3)
# Replacing the name of column 3
names(dataframe[3]) <- dpt
head(dataframe)
dpt <- paste("col", 3, sep = "")
# Replacing the name of column 3
names(dataframe[3]) <- dpt
head(dataframe)
row_names <- paste("Row", 1:89, sep = "")
rownames(dataframe) <- row_names
head(dataframe)
row_names <- paste("X", 1:89, sep = "")
rownames(dataframe) <- row_names
head(dataframe)
dataframe[“DeptType”] <- dp
View(dp)
dataframe <- dataframe %>%
str_replace_all("_", "")
dataframe)
head(dataframe)
head(dataframe)
dataframe <- read.csv('Habib.csv')
head(dataframe)
dp <- dp %>%
str_replace_all(" ", "")
dataframe <- dataframe %>%
str_replace_all(" ", "")
head(dataframe)
dataframe <- read.csv('Habib.csv')
dp <- dataframe[, c(“DepartmentType”), drop=FALSE]
head(dataframe)
dp <- dataframe[3]
View(dp)
dp <- dp %>%
str_replace_all(" ", "")
# Piping dp dataframe
dp <- dp %>%
str_replace_all(" ", "_")
View(dp)
dp <- dataframe[3]
dp <- dp %>%
str_replace_all(" ", "_")
head(dp)
dp <- dataframe[3]
head(dp)
library(stringr)
library(dplyr)
# Piping dp dataframe
dp <- dp %>%
str_replace_all(" ", "_")
head(dp)
dataframe <- dataframe %>%
str_replace_all(" ", "")
dataframe <- read.csv('Habib.csv')
dp <- dataframe$DepartmentType
dp <- dp %>%
str_replace_all(" ", "_")
colnames(dp)
colnames(dp) <- name
name <- "name"
colnames(dp) <- name
names(dp) <- c("col1")
colnames(dp) <- name
colnames(dp
colnames(dp)
head(dp)
View(dp)
#Renaming the column
names(dp) <- c("DeptType")
colnames(dp)
head(dp)
colnames(dp) <- c("DeptType")
colnames(dp)
View(dp)
names(dp)[1] <- "DeptType"
colnames(dp)
View(datafr)
View(dataframe)
names(dataframe) <- c("DeptType")
head(dataframe)
View(dataframe)
dataframe <- read.csv('Habib.csv')
head(dataframe)
dataframe[“DeptType”] <- dp
View(dp)
dataframe[“DeptType”] <- dataframe$DepartmentType
View(dataframe)
dataframe[c(“DeptType”)] <- c(dataframe$DepartmentType)
View(dataframe)
dataframe[c(“DeptType”)] <- c(dataframe$Month)
dataframe$Dept = dp
View(dataframe)
dp1 <- dataframe[3]
View(dp1)
dp1 <- dataframe[3]
View(dp1)
dp1 <- dp1 %>%
str_replace_all(" ", "_")
View(dataframe)
dataframe[c(“DeptType”)] <- c(dataframe$Dept)
head(dataframe)
row_names <- paste("X", 1:89, sep = "")
rownames(dataframe) <- row_names
head(dataframe)
Emergencies <- filter(dataframe, Dept = "Emergency_Dept")
library(dplyr)
install.packages(dplyr)
install.packages('dplyr')
library(dplyr)
# Filetring and assigning emergency dataframe
Emergencies <- filter(dataframe, Dept = "Emergency_Dept")
# Filetring and assigning emergency dataframe
Emergencies <- filter(dataframe, Dept = "Emergency_Department")
# Filetring and assigning emergency dataframe
Emergencies <- filter(dataframe, Dept = "Emergency_Department")
colnames(dataframe)
# Filetring and assigning emergency dataframe
Emergencies <- filter(dataframe, Dept == "Emergency_Department")
View(Emergencies)
View(dataframe)
# Filetring and assigning emergency dataframe
Emergencies <- filter(dataframe, Dept == "Emergency_Department")
# Filetring and assigning emergency dataframe
Emergencies <- filter(dataframe, Month == "201906")
# Filetring and assigning emergency dataframe
Emergencies <- dataframe[which(dataframe$Month == "201906"),]
View(Emergencies)
# Filetring and assigning emergency dataframe
Emergencies <- dataframe[which(dataframe$Dept == "Emergency_Department"),]
View(Emergencies)
Emergency <- dataframe[which(dataframe$DepartmentType == "Emergency Department"),]
View(Emergency)
row_names <- paste("X", 1:30, sep = "")
rownames(Emergency) <- row_names
View(Emergency)
x <- mean(DepartmentType, na.rm=TRUE)
# Finding the point estimate
Average_Attendance = Emergency.NumberOfAttendances
# Finding the point estimate
Average_Attendance = Emergency$NumberOfAttendances
x <- mean(Average_Attendance, na.rm=TRUE)
View(x)
mean(Average_Attendance, na.rm=TRUE)
Emergency.at['X1', 'NumberOfAttendances']
Emergency.iat[0,0]
install.packages('iat')
install.packages('IAT')
library(IAT)
Emergency.iat[0,0]
Emergency.at['X1', 'NumberOfAttendances']
Emergency[NumberOfAttendances][0]
Emergency['NumberOfAttendances''][0]
Emergency['NumberOfAttendances''][0]
Emergency['NumberOfAttendances'][0]
Emergency['NumberOfAttendances'][1]
Emergency$NumberOfAttendances[1]
row_names <- paste("X", 1:30, sep = "")
rownames(Emergency) <- row_names
# Stating the distribution of 1st attendance in NumberOfAttendances
XX1 = Emergency$NumberOfAttendances[1]
View(XX1)
Standard_Deviation <- sd(NumberOfAttendances, na.rm=TRUE)
Standard_Deviation <- sd(Average_Attendance, na.rm=TRUE)
View(Standard_Deviation)
λ <- mean(Average_Attendance, na.rm=TRUE)
View(λ)
mean <- mean(Average_Attendance, na.rm=TRUE)
pnorm(XX1, Point_Estimate, Standard_Deviation)
Point_Estimate <- mean(Average_Attendance, na.rm=TRUE)
pnorm(XX1, Point_Estimate, Standard_Deviation)
Distribution <- pnorm(XX1, Point_Estimate, Standard_Deviation)
View(Distribution)
# Calculating the confdence interval
n <- 1000
error <- qnorm(0.975) * Standard_Deviation/sqrt(n)
View(error)
Lower_Interval <- Point_Estimate - error
Upper_Interval <- Point_Estimate + error
View(Lower_Interval)
View(Lower_Interval, Upper_Interval)
View(Upper_Interval)
